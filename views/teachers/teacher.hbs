<!DOCTYPE html>
<html>
    <head>
        <title>{{title}}</title>
        <link rel="stylesheet" href="/../../css/main.css">
        <link rel="stylesheet" href="/../../css/table.css">
        
    </head>
    <body>
        {{> header}}
        <a href="/teachers/education/create/{{teacher.teacherID}}" class="create_href"><button class="create-button">Добавить образование</button></a>
        {{> teacher_table teacher=teacher attribute="disabled readonly"}}
        <label>Режим редактирования преподавателя</label>
        <input type="checkbox" id="toggle-teacher-button" class="toggle-button">
        <button hidden id="update-teacher-button">Сохранить</button>
        <h3>Полученное образование</h3>
    <div class="table-grid">
        {{#each educations}}
            {{> education_table attribute="readonly disabled" education=this}} 
        {{/each}}
    </div>
    </body>
</html>

<script>
    var flag = true;
    document.getElementById('toggle-teacher-button').onclick = async function() {
        var inputs = document.getElementsByName('input');
        inputs.forEach((input)=>{
            input.readOnly = !input.readOnly;
            input.disabled = !input.disabled;
        });
        var but = document.getElementById("update-teacher-button");
        but.hidden = !but.hidden;
    };
    
    document.getElementById('update-teacher-button').onclick = async function(){
        var fio = document.getElementById('fio').value.split(/\s+/);
        if(!fio[0]) {alert("Введите имя");return;}
        if(!fio[1]) {alert("Введите фамилию");return;}
        var midname = "";
        if(fio[2]) midname = fio[2];
        var data = {
            teacherID: document.getElementById('id').value,
            teachersurname: fio[0],
            teachername: fio[1],
            teachermidname: midname,
            teachersex: document.getElementById('sex').value,
            teacheremail: document.getElementById('email').value,
            teachersalary: document.getElementById('salary').value,
            teacherexperience: document.getElementById('experience').value,
            teacherphone: document.getElementById('phone').value,
            teachertin: document.getElementById('tin').value,
            teacherpassport: document.getElementById('passport').value,
            teacherpassportby: document.getElementById('passportby').value,
            teacherpassportdate: document.getElementById('passportdate').value,
            teacheraddress: document.getElementById('address').value,
        };
        if(data.teachersurname.length > 30){alert("Фамилия не должна быть длиннее 30 симоволов"); return;}
        if(data.teachername.length > 30){alert("Имя не должно быть длиннее 30 симоволов"); return;}
        if(data.teachermidname.length > 30){alert("Отчество не должно быть длиннее 30 симоволов"); return;}
        if(!/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(data.teacheremail) || data.teacheremail.length > 30){alert("Неверный email"); return;}
        if(!/^\d+$/.test(data.teachersalary)){alert("Укажите оклад");return;}
        if(!/^\d+$/.test(data.teacherphone)){alert("Укажите стаж");return;}
        if(!/^\d+$/.test(data.teacherphone) || data.teacherphone.length > 11){alert("Некорректный номер телефона");return;}
        if(!/^\d+$/.test(data.teachertin) || data.teachertin.length != 12){alert("Некорректный ИНН");return;}
        if(!/^\d+$/.test(data.teacherpassport) || data.teacherpassport.length !=10){alert("Некорректные номер и серия паспорта");return;}
        if(data.teacherpassportby.lenght > 50){alert("Место выдачи должно быть не длиннее 50 символов");return;}
        var date = data.teacherpassportdate.split(/[- :]/);
        if(!data.teacherpassportdate){alert("Некорректный формат даты");return;}
        var curdate = new Date();
        if(parseInt(date[0]) > curdate.getFullYear()-14 || parseInt(date[0]) < curdate.getFullYear()-80){alert("Некорректный год");return;}
        if(data.teacheraddress.length > 50){alert("Адрес не должнен быть длиннее 50 симоволов"); return;}
        
        var educationtables = document.querySelectorAll('.table-grid-element');
        var educations = [];
        educationtables.forEach(function(table){
            var isChanged = false;
            var temp = {};
            var inputs = table.querySelectorAll('.education-element');
            inputs.forEach(function(input){
                if(!isChanged)
                    if(input.value != input.defaultValue)
                    {
                        isChanged = true;
                    }
                var id = input.id;
                temp[id] = input.value;
            });
            if(isChanged)
            {
                var id = temp.id;
                var errorstr = "Ошибка в записи номер: " + id + "\n";
                var begindate = temp.begindate.split(/[- :]/);
                var enddate = temp.enddate.split(/[- :]/);
                var curdate = new Date();
                if(!temp.begindate || !temp.enddate){
                    alert("Некорректный формат даты");
                    return;
                }
                var year = curdate.getFullYear();
                if(begindate[0] > year || begindate[0] < year-100 || enddate[0] > year || enddate[0] < year-100 ){
                    alert("Некорректный год");
                    return;
                }
                if(!/^\d+$/.test(temp.regnumber) || temp.regnumber.length != 13){alert(errorstr+"Некорректный номер регистрации");return;}
                console.log(temp);
                if(!temp.institution || temp.institution.length > 50){alert(errorstr+"Некорректное место обучения");return;}
                if(!temp.speciality || temp.speciality.length > 30){alert(errorstr+"Некорректная специальность");return;}
                if(!temp.qualification || temp.qualification.length > 30){alert(errorstr+"Некорректная квалификация");return;}
                educations.push(temp);
            }
        });
        data["educations"] = educations;
        
        const response = await fetch('/teachers/teacher/update', {
            method: 'post',
            body: JSON.stringify(data),
            headers: {'Content-Type': 'application/json'}
        });
    };
    async function delete_element(elem){
        var id = elem.value;
        const response = await fetch('/teachers/education/delete/'+id, {
            method: 'post',
            headers: {'Content-Type': 'application/json'}
        });
        if (response.status == 400) {alert("Ошибка");return;}
        var tr = elem.closest("table");
        tr.remove();
    }
    function auto_grow(element) {
        element.style.height = "5px";
        element.style.height = (element.scrollHeight)+"px";
    };
</script>