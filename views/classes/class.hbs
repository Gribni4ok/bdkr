<!DOCTYPE html>
<html>
    <head>
        <title>{{title}}</title>
        <link rel="stylesheet" href="/../../css/main.css">
        <link rel="stylesheet" href="/../../css/table.css">
        <link href='https://css.gg/css' rel='stylesheet'>
        
    </head>
    <body>
        {{> header token=token}}
        <div>
            <input type="hidden" id="id" value="{{info.classID}}">
        </div>
        {{> class_table class=info teacher=teacher attribute="readonly disabled"}}
        {{#isGreater token.role "1"}}
        <label>Режим редактирования</label>
        <input type="checkbox" id="toggle-button" class="toggle-button">
        <button hidden id="update-button">Сохранить</button>
        {{/isGreater}}
        {{#isGreater token.role "0"}}
        {{> students_table students=students}}
        {{/isGreater}}
    </body>
</html>

<script>
    var flag = true;
    document.getElementById('toggle-button').onclick = async function() {
        var inputs = document.getElementsByName('input');
        inputs.forEach((input)=>{
            input.readOnly = !input.readOnly;
            input.disabled = !input.disabled
        });

        var but = document.getElementById("update-button");
        but.hidden = !but.hidden;
        
        if(!flag) return;
        flag = false;
        
        const response = await fetch('/classes/class/update/get', {
            method: 'post',
            headers: {'Content-Type': 'application/json'}
        });
        const res = await response.json();

        var temp = document.getElementById('teacher');
        res.teachers.forEach((teacher)=>{
            let value = teacher.teacherID;
            let option = teacher.teachersurname + " " + teacher.teachername + " " + teacher.teachermidname;
            if(temp.options[0].value != value)
                temp.appendChild(new Option(option,value));
        });
    
        temp = document.getElementById('course');
        res.courses.forEach((course)=>{
            let value = course.courseID;
            let option = course.coursename;
            if(temp.options[0].value != value)
                temp.appendChild(new Option(option,value));
        });
    }
    
    document.getElementById('update-button').onclick = async function(){
        var data = {
            classID: document.getElementById('id').value,
            classdate: document.getElementById('date').value,
            classname: document.getElementById('name').value,
            courseID: document.getElementById('course').value,
            teacherID: document.getElementById('teacher').value,
            description: document.getElementById('description').value
        };
        var date = data.classdate.split(/[- :]/);
        if(!data.classdate){
            alert("Некорректный формат даты");
            return;
        }
        if(date[0] > 3000 || date[0] < 2000){
            alert("Некорректный год");
            return;
        }
        if(!date.description) date.description = "";
        if(data.description.length >120) 
        {
            alert("Описание не должно быть длиннее 120 символов");
            return;
        }
        var str = data.classname;
        str = data.classname.replace(/\s/g, '');
        if(!str || str.lenght<1)
        {
            alert("Введите название группы");
            return;
        }
            const response = await fetch('/classes/class/update', {
                method: 'post',
                body: JSON.stringify(data),
                headers: {'Content-Type': 'application/json'}
            });
    }
</script>